swagger: '2.0'
securityDefinitions:
  BearerAuth:
    type: apiKey
    name: Authorization
    in: header

info:
  title: S.a.a.S Escolas
  description: Serviço de teste da API
  version: 1.0.0

paths:
  /authentication:
    post:
      tags:
        - Authentication
      summary: Realiza o login na Api
      description: Realiza o login na API
      operationId: loginController
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Authentication
          description: Login e senha
          required: true
          schema:
            $ref: '#/definitions/Authentication'
      responses:
        202:
          description: 'Login realizado com sucesso'
        400:
          description: 'Dados incorretos'
        404:
          description: 'Usuário não encontrado'
        500:
          description: 'Erro interno do servidor'
      x-swagger-router-controller: 'Login.Controller'
  /saas/CreateUser:
    post:
      security:
        - BearerAuth: [ ]
      tags:
        - User
      summary: Cadastra o usuario no sistema
      description: Cadastra o usuario no sistema
      operationId: createUserController
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: dados do usuario
          required: true
          schema:
            $ref: '#/definitions/newUser'
      responses:
        201:
          description: 'Usuario cadastrado'
        400:
          description: 'Dados incorretos'
        404:
          description: 'Dados não encontrados'
        500:
          description: 'Erro interno do servidor'


definitions:
  Authentication:
    type: object
    properties:
      login:
        type: string
        format: email
        example: teste@teste.com.br
      password:
        type: string
        format: password
        example: senha1234
  newUser:
    type: object
    properties:
      name:
        type: string
        example: Jon Doe
      cpf:
        type: string
        example: 11122233344
      phone:
        type: string
        format: phone
        example: 55 11 911111111
      email:
        type: string
        format: email
        example: teste@teste.com.br
      password:
        type: string
        example: senha1234
      securityQuestion:
        type: string
        example: Nome do seu primeiro cachorro
      securityResponse:
        type: string
        example: Max
      roleEnum:
        type: string
        enum:
          - PS
          - ES
          - US

