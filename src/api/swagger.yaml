swagger: '2.0'
securityDefinitions:
  BearerAuth:
    type: apiKey
    name: Authorization
    in: header

info:
  title: S.a.a.S Escolas
  description: Serviço de teste da API
  version: 1.0.

paths:
  /authentication:
    post:
      tags:
        - Authentication
      summary: Realiza o login na Api
      description: Realiza o login na API
      operationId: loginController
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Authentication
          description: Login e senha
          required: true
          schema:
            $ref: '#/definitions/Authentication'
      responses:
        202:
          description: 'Login realizado com sucesso'
        200:
          description: New response
        400:
          description: 'Dados incorretos'
        404:
          description: 'Usuário não encontrado'
        500:
          description: 'Erro interno do servidor'
      x-swagger-router-controller: 'Login.Controller'
  /saas/user/CreateUser:
    post:
      security:
        - BearerAuth: [ ]
      tags:
        - User
      summary: Cadastra o usuario no sistema
      description: Cadastra o usuario no sistema
      operationId: createUserController
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: dados do usuario
          required: true
          schema:
            $ref: '#/definitions/newUser'
      responses:
        201:
          description: 'Usuario cadastrado'
        400:
          description: 'Dados incorretos'
        404:
          description: 'Dados não encontrados'
        500:
          description: 'Erro interno do servidor'
      x-swagger-router-controller: 'Login.Controller'
  /saas/user/getAllUser:
    get:
      security:
        - BearerAuth: [ ]
      tags:
        - User
      summary: Busca todos os usuarios cadastrados no banco de dados
      description: Busca todos os usuarios cadastrados no banco de dados
      operationId: getAllUsersController
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: Ok
        404:
          description: Dados não encontrados
        500:
          description: Erro interno do Servidor
      x-swagger-router-controller: 'Login.Controller'
  /saas/user/{id}:
    get:
      security:
        - BearerAuth: [ ]
      tags:
        - User
      summary: Busca o usuario pelo id fornecido
      description: Busca o usuario pelo id fornecido
      operationId: getUserByIdController
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          description: Id da escola
          required: true
      responses:
        200:
          description: Ok
        400:
          description: Dados incorretos
        404:
          description: Dados inválidos
        500:
          description: Erro Interno do Servidor
      x-swagger-router-controller: 'Login.Controller'
    patch:
      security:
        - BearerAuth: [ ]
      tags:
        - User
      summary: Atualiza os dados do usuario pelo id fornecido
      description: Atualiza os dados do usuario pelo id fornecido
      operationId: updateUserController
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          description: Id da escola
          required: true
        - in: body
          name: user
          description: dados do usuario
          required: true
          schema:
            $ref: '#/definitions/newUser'
      responses:
        200:
          description: Ok
        400:
          description: Dados incorretos
        404:
          description: Dados inválidos
        500:
          description: Erro Interno do Servidor
      x-swagger-router-controller: 'Login.Controller'
    delete:
      security:
        - BearerAuth: [ ]
      tags:
        - User
      summary: Deleta o usuario pelo id fornecido
      description: Deleta o usuario pelo id fornecido
      operationId: deleteUserController
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          description: Id da escola
          required: true
      responses:
        200:
          description: Ok
        400:
          description: Dados incorretos
        404:
          description: Dados inválidos
        500:
          description: Erro Interno do Servidor
      x-swagger-router-controller: 'Login.Controller'
  /saas/school/createSchool:
    post:
      security:
        - BearerAuth: [ ]
      tags:
        - School
      summary: Cadastra uma escola no banco de dados
      description: Cadastra uma empresa no banco de dados
      operationId: postNewSchoolController
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: school
          description: dados da escola
          required: true
          schema:
            $ref: '#/definitions/School'
      responses:
        201:
          description: 'Escola cadastrada com sucesso'
        400:
          description: 'Dados incorretos'
        404:
          description: 'Dados não encontrados'
        500:
          description: 'Erro interno do servidor'
      x-swagger-router-controller: 'School.Controller'
  /saas/school/getAllSchools:
    get:
      security:
        - BearerAuth: [ ]
      tags:
        - School
      summary: Busca todas as escolas no banco de dados
      description: Busca todas as escolas no banco de dados
      operationId: getAllSchoolController
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: name
          type: string
          description: Filtro por nome da instituição
          required: false
        - in: query
          name: esferaAdministrativa
          type: string
          description: Filtro por esfera administrativa
          required: false
        - in: query
          name: valorMensalidade
          type: number
          description: Filtro por valor de mensalidade
          required: false
        - in: query
          name: situacaoFuncionamento
          type: string
          description: Filtro por situação de funcionamento
          required: false
        - in: query
          name: qntSalas
          type: number
          description: Filtro por quantidade de salas
          required: false
        - in: query
          name: qntAlunos
          type: number
          description: Filtro por quantidade de alunos
          required: false
        - in: query
          name: qntProfessores
          type: number
          description: Filtro por quantidade de professores
          required: false
        - in: query
          name: qntTurmas
          type: number
          description: Filtro por quantidade de turmas
          required: false
        - in: query
          name: qntFuncionarios
          type: number
          description: Filtro por quantidade de funcionários
          required: false
        - in: query
          name: temQuadraCoberta
          type: boolean
          description: Filtro por existência de quadra coberta
          required: false
        - in: query
          name: temQuadraNaoCoberta
          type: boolean
          description: Filtro por existência de quadra não coberta
          required: false
        - in: query
          name: temInternet
          type: boolean
          description: Filtro por existência de internet
          required: false
        - in: query
          name: temBandaLarga
          type: boolean
          description: Filtro por existência de banda larga
          required: false
        - in: query
          name: temLaboratorioInformatica
          type: boolean
          description: Filtro por existência de laboratório de informática
          required: false
        - in: query
          name: temLaboratorioCiencia
          type: boolean
          description: Filtro por existência de laboratório de ciências
          required: false
        - in: query
          name: temRefeitorio
          type: boolean
          description: Filtro por existência de refeitório
          required: false
        - in: query
          name: temAuditorio
          type: boolean
          description: Filtro por existência de auditório
          required: false
        - in: query
          name: temDespensa
          type: boolean
          description: Filtro por existência de despensa
          required: false
        - in: query
          name: temAumoxarifado
          type: boolean
          description: Filtro por existência de almoxarifado
          required: false
        - in: query
          name: temPatioCoberto
          type: boolean
          description: Filtro por existência de pátio coberto
          required: false
        - in: query
          name: temPatioNaoCoberto
          type: boolean
          description: Filtro por existência de pátio não coberto
          required: false
        - in: query
          name: temPatioInfantil
          type: boolean
          description: Filtro por existência de pátio infantil
          required: false
        - in: query
          name: temCozinha
          type: boolean
          description: Filtro por existência de cozinha
          required: false
        - in: query
          name: temBiblioteca
          type: boolean
          description: Filtro por existência de biblioteca
          required: false
        - in: query
          name: temSanitarioNoPredio
          type: boolean
          description: Filtro por existência de sanitário no prédio
          required: false
        - in: query
          name: temSanitarioForaPredio
          type: boolean
          description: Filtro por existência de sanitário fora do prédio
          required: false
        - in: query
          name: temBercario
          type: boolean
          description: Filtro por existência de berçário
          required: false
        - in: query
          name: temSalaLeitura
          type: boolean
          description: Filtro por existência de sala de leitura
          required: false
        - in: query
          name: temAreaVerde
          type: boolean
          description: Filtro por existência de área verde
          required: false
        - in: query
          name: temAguaFiltrada
          type: boolean
          description: Filtro por existência de água filtrada
          required: false
        - in: query
          name: temCreche
          type: boolean
          description: Filtro por existência de creche
          required: false
        - in: query
          name: temEnsinoFundamental
          type: boolean
          description: Filtro por existência de ensino fundamental
          required: false
        - in: query
          name: temEnsinoMedio
          type: boolean
          description: Filtro por existência de ensino médio
          required: false
        - in: query
          name: temEnsinoMedioNormal
          type: boolean
          description: Filtro por existência de ensino médio normal
          required: false
        - in: query
          name: temEnsinoMedioProfissional
          type: boolean
          description: Filtro por existência de ensino médio profissional
          required: false
        - in: query
          name: temEnsinoMedioIntegrado
          type: boolean
          description: Filtro por existência de ensino médio integrado
          required: false
        - in: query
          name: temEducacaoJovemAdulto
          type: boolean
          description: Filtro por existência de educação de jovens e adultos
          required: false
        - in: query
          name: temEducacaoIndigena
          type: boolean
          description: Filtro por existência de educação indígena
          required: false
        - in: query
          name: banheiroTemChuveiro
          type: boolean
          description: Filtro por existência de chuveiro no banheiro
          required: false
        - in: query
          name: ofereceAlimentacao
          type: boolean
          description: Filtro por oferta de alimentação
          required: false
        - in: query
          name: acessoCadeirante
          type: boolean
          description: Filtro por acessibilidade para cadeirantes
          required: false
        - in: query
          name: pisoTatil
          type: boolean
          description: Filtro por existência de piso tátil
          required: false
        - in: query
          name: banheiroAcessivel
          type: boolean
          description: Filtro por existência de banheiro acessível
          required: false
        - in: query
          name: elevador
          type: boolean
          description: Filtro por existência de elevador
          required: false
        - in: query
          name: salaDescompressao
          type: boolean
          description: Filtro por existência de sala de descompressão
          required: false
        - in: query
          name: pessoaDeLibras
          type: boolean
          description: Filtro por existência de pessoa de libras
          required: false
        - in: query
          name: acompanhanteParaAlunos
          type: boolean
          description: Filtro por existência de acompanhante para alunos
          required: false
      responses:
        200:
          description: 'Ok'
        404:
          description: 'Dados não encontrado'
        500:
          description: 'Erro interno do servidor'
      x-swagger-router-controller: 'School.Controller'
  /saas/school/{id}:
    get:
      security:
        - BearerAuth: [ ]
      tags:
        - School
      summary: Busca as escolas no banco de dados com ou sem filtro
      description: Busca as escolas no banco de dados com ou sem filtro
      operationId: getSchoolByIdController
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          description: Id da escola
          required: true
      responses:
        200:
          description: Ok
        400:
          description: Dados incorretos
        404:
          description: Dados não encontrados
        500:
          description: Erro interno do servidor
      x-swagger-router-controller: 'School.Controller'
    patch:
      security:
        - BearerAuth: [ ]
      tags:
        - School
      summary: Atualiza os dados da escola com o id informado
      description: Atualiza os dados da escola com o id informado
      operationId: updateSchoolbyIdController
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          description: Id da escola
          required: true
        - in: body
          name: school
          description: dados da escola
          required: true
          schema:
            $ref: '#/definitions/School'
      responses:
        200:
          description: Ok
        400:
          description: Dados incorretos
        404:
          description: Dados não encontrados
        500:
          description: Erro interno do servidor
      x-swagger-router-controller: 'School.Controller'
    delete:
      security:
        - BearerAuth: [ ]
      tags:
        - School
      summary: Deleta a escola do id informado
      description: Deleta a escola do id informado
      operationId: deleteSchoolbyIdController
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          description: Id da escola
          required: true
      responses:
        200:
          description: Ok
        400:
          description: Dados incorretos
        404:
          description: Dados não encontrados
        500:
          description: Erro interno do servidor
      x-swagger-router-controller: 'School.Controller'
  /saas/profissionais/createProfissional:
    post:
      security:
        - BearerAuth: [ ]
      tags:
        - Profissional
      summary: Cria um profissional no banco de dados
      description: Cria um profissional no banco de dados
      operationId: createProfissonaisController
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: profissional
          description: dados do profissional que sera cadastrado
          required: true
          schema:
            $ref: '#/definitions/Profissionais'
      responses:
        201:
          description: Usuario cadastrado
        400:
          description: dados incorretos
        404:
          description: Nao encontrado
        500:
          description: Erro interno do servidor
      x-swagger-router-controller: Profissional.Controller
  /saas/profissionais/getAllProfissionais:
    get:
      security:
        - BearerAuth: [ ]
      tags:
        - Profissional
      summary: busca todos os profissionais cadastrados no banco de dados
      description: busca todos os profissionais cadastrados no banco de dados
      operationId: getAllProfissionaisController
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: Ok
        404:
          description: Não encontrado
        500:
          description: Erro interno do servidor
      x-swagger-router-controller: Profissional.Controller
  /saas/profissionais/{id}:
    get:
      security:
        - BearerAuth: [ ]
      tags:
        - Profissional
      summary: Busca o profissional pelo id
      description: Busca o profissional pelo id
      operationId: getProfissionalByIdController
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: id do profissional
      responses:
        200:
          description: Ok
        400:
          description: Dados invalidos
        404:
          description: Não encontrado
        500:
          description: Erro interno do servidor
      x-swagger-router-controller: Profissional.Controller
    patch:
      security:
        - BearerAuth: [ ]
      tags:
        - Profissional
      summary: Atualiza os dados do profissional baseado no id informado
      description: Atualiza os dados do profissional baseado no id informado
      operationId: updateProfissionalByIdController
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: id do profissional
        - in: body
          name: profissional
          description: dados do profissional que sera cadastrado
          required: true
          schema:
            $ref: '#/definitions/Profissionais'
      responses:
        200:
          description: Ok
        400:
          description: Dados invalidos
        404:
          description: Não encontrado
        500:
          description: Erro interno do servidor
      x-swagger-router-controller: Profissional.Controller
    delete:
      security:
        - BearerAuth: [ ]
      tags:
        - Profissional
      summary: Deleta o profissional baseado no id informado
      description: Deleta o profissional baseado no id informado
      operationId: deleteProfissionalController
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: id do profissional
      responses:
        200:
          description: Ok
        400:
          description: Dados invalidos
        404:
          description: Não encontrado
        500:
          description: Erro interno do servidor
      x-swagger-router-controller: Profissional.Controller

definitions:
  Authentication:
    type: object
    properties:
      login:
        type: string
        format: email
        example: teste@teste.com.br
      password:
        type: string
        format: password
        example: senha1234
  newUser:
    type: object
    properties:
      name:
        type: string
        example: Jon Doe
      document:
        type: string
        example: 11122233344
      phone:
        type: string
        format: phone
        example: 55 11 911111111
      email:
        type: string
        format: email
        example: teste@teste.com.br
      password:
        type: string
        example: senha1234
      securityQuestion:
        type: string
        example: Nome do seu primeiro cachorro
      securityResponse:
        type: string
        example: Max
      roleEnum:
        type: string
        enum:
          - PS
          - ES
          - US
  School:
    type: object
    properties:
      name:
        type: string
        example: "Escola Modelo"
      telefone:
        type: string
        example: "(11) 99999-9999"
      email:
        type: string
        format: email
        example: "contato@escolamodelo.com.br"
      cnpj:
        type: string
        example: "12.345.678/0001-90"
      representante:
        type: string
        example: "Maria da Silva"
      site:
        type: string
        example: "www.escolamodelo.com.br"
      instagram:
        type: string
        example: "@escolamodelo"
      whatsapp:
        type: string
        example: "(11) 99999-9999"
      esferaAdministrativa:
        type: string
        example: "Municipal"
      valorMensalidade:
        type: number
        example: 1200.50
      situacaoFuncionamento:
        type: string
        example: "Ativa"
      qntSalas:
        type: number
        example: 20
      qntAlunos:
        type: number
        example: 500
      qntProfessores:
        type: number
        example: 30
      qntTurmas:
        type: number
        example: 25
      qntFuncionarios:
        type: number
        example: 15
      sobre:
        type: string
        example: "Escola fundada em 1980 com foco em educação de qualidade"
      cep:
        type: string
        example: "01234-567"
      logradouro:
        type: string
        example: "Rua das Flores"
      numero:
        type: string
        example: "123"
      complemento:
        type: string
        example: "Sala 1"
      bairro:
        type: string
        example: "Centro"
      cidade:
        type: string
        example: "São Paulo"
      estado:
        type: string
        example: "SP"
      temQuadraCoberta:
        type: boolean
        example: true
      temQuadraNaoCoberta:
        type: boolean
        example: false
      temInternet:
        type: boolean
        example: true
      temBandaLarga:
        type: boolean
        example: true
      temLaboratorioInformatica:
        type: boolean
        example: true
      temLaboratorioCiencia:
        type: boolean
        example: true
      temRefeitorio:
        type: boolean
        example: true
      temAuditorio:
        type: boolean
        example: false
      temDespensa:
        type: boolean
        example: true
      temAumoxarifado:
        type: boolean
        example: true
      temPatioCoberto:
        type: boolean
        example: true
      temPatioNaoCoberto:
        type: boolean
        example: true
      temPatioInfantil:
        type: boolean
        example: false
      temCozinha:
        type: boolean
        example: true
      temBiblioteca:
        type: boolean
        example: true
      temSanitarioNoPredio:
        type: boolean
        example: true
      temSanitarioForaPredio:
        type: boolean
        example: false
      temBercario:
        type: boolean
        example: false
      temSalaLeitura:
        type: boolean
        example: true
      temAreaVerde:
        type: boolean
        example: true
      temAguaFiltrada:
        type: boolean
        example: true
      temCreche:
        type: boolean
        example: false
      temEnsinoFundamental:
        type: boolean
        example: true
      temEnsinoMedio:
        type: boolean
        example: true
      temEnsinoMedioNormal:
        type: boolean
        example: false
      temEnsinoMedioProfissional:
        type: boolean
        example: true
      temEnsinoMedioIntegrado:
        type: boolean
        example: false
      temEducacaoJovemAdulto:
        type: boolean
        example: true
      temEducacaoIndigena:
        type: boolean
        example: false
      banheiroTemChuveiro:
        type: boolean
        example: true
      ofereceAlimentacao:
        type: boolean
        example: true
      acessoCadeirante:
        type: boolean
        example: true
      pisoTatil:
        type: boolean
        example: true
      banheiroAcessivel:
        type: boolean
        example: true
      elevador:
        type: boolean
        example: false
      salaDescompressao:
        type: boolean
        example: false
      pessoaDeLibras:
        type: boolean
        example: true
      acompanhanteParaAlunos:
        type: boolean
        example: false
  Profissionais:
    type: object
    properties:
      name:
        type: string
        example: "Dr. João Silva"
        description: "Nome completo do profissional"
      document:
        type: string
        example: "11122233344"
        description: "CPF ou CNPJ da pessoa que vai atender"
      imagem:
        type: string
        example: "https://exemplo.com/foto.jpg"
        description: "URL da imagem do profissional"
      site:
        type: string
        example: "https://drjoaosilva.com.br"
        description: "Site pessoal/profissional"
      instagram:
        type: string
        example: "@drjoaosilva"
        description: "Perfil no Instagram"
      telefone:
        type: string
        example: "(11) 99999-9999"
        description: "Telefone para contato"
      whatsapp:
        type: string
        example: "(11) 99999-9999"
        description: "Número do WhatsApp"
      email:
        type: string
        format: email
        example: "contato@drjoaosilva.com.br"
        description: "E-mail profissional"
      crm:
        type: string
        example: "CRM/SP 123456"
        description: "Registro no Conselho Regional de Medicina (para médicos)"
      crp:
        type: string
        example: "CRP/SP 12345"
        description: "Registro no Conselho Regional de Psicologia (para psicólogos)"
      categoria:
        type: string
        example: "Psiquiatra"
        description: "Categoria principal do profissional"
      categoria2:
        type: string
        example: "Terapeuta"
        description: "Categoria secundária (opcional)"
      localdeAtendimento:
        type: string
        example: "Consultório particular"
        description: "Local onde o profissional atende"
      valorConsulta:
        type: number
        format: float
        example: 350.00
        description: "Valor da consulta"
      sobreMim:
        type: string
        example: "Médico psiquiatra com 10 anos de experiência..."
        description: "Texto descritivo sobre o profissional"
      createdAt:
        type: string
        format: date-time
        example: "2023-01-01T12:00:00Z"
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        example: "2023-01-02T10:30:00Z"
        readOnly: true
      deletedAt:
        type: string
        format: date-time
        example: "2023-01-03T15:45:00Z"
        readOnly: true

